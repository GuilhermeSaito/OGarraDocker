# pacote necessários
packages = c("devtools", "rstudioapi", "withr")
# verificar se estão instalados ou não
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
# local de trabalho
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
# documenta
devtools::document(pkg = './OGarraDocker')
# documenta
devtools::document(pkg = './OGarraDocker')
# build
devtools::build(pkg = './OGarraDocker', path = './source/')
# build
devtools::build(pkg = './OGarraDocker', path = './source/')
# build
devtools::build(pkg = './OGarraDocker', path = './source/')
# instalação para testes
withr::with_libpaths(new = .libPaths()[1], install.packages('./source/OGarraDocker_0.1.0.tar.gz', type='source', repos = NULL))
# local de trabalho
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
# pacote necessários
packages = c("devtools", "rstudioapi", "withr")
# verificar se estão instalados ou não
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
# local de trabalho
# setwd("/home/gtsaito/Desktop/Gui/Oficinas1/OGarraDocker")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
# documenta
devtools::document(pkg = './OGarraDocker')
# build
devtools::build(pkg = './OGarraDocker', path = './source/')
# instalação para testes
withr::with_libpaths(new = .libPaths()[1], install.packages('./source/OGarraDocker_0.1.0.tar.gz', type='source', repos = NULL))
# documenta
devtools::document(pkg = './OGarraDocker')
# build
devtools::build(pkg = './OGarraDocker', path = './source/')
# instalação para testes
withr::with_libpaths(new = .libPaths()[1], install.packages('./source/OGarraDocker_0.1.0.tar.gz', type='source', repos = NULL))
# Se der o erro "package ‘OGarraDocker’ is in use and will not be installed"
detach("package:OGarraDocker", unload = TRUE)
# instalação para testes
withr::with_libpaths(new = .libPaths()[1], install.packages('./source/OGarraDocker_0.1.0.tar.gz', type='source', repos = NULL))
library("opencpu")
ocpu_start_app("OGarraDocker")
#!/usr/bin/Rscript
# ESTE SCRIPT DEVE SER EXECUTADO SOMENTE NA MÁQUINA DE TESTES. NÃO EXECUTAR NO HOST!
# A CADA EXECUÇÃO ALTERAR OS PATHS DE ACORDO COM A NECESSIDADE
# COMO DEFAULT, O PACOTE BuscaNFe É UTILIZADO
# pacote necessários
packages = c("devtools", "rstudioapi", "withr")
# verificar se estão instalados ou não
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
# local de trabalho
# setwd("/home/gtsaito/Desktop/Gui/Oficinas1/OGarraDocker")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
# documenta
devtools::document(pkg = './OGarraDocker')
# build
devtools::build(pkg = './OGarraDocker', path = './source/')
# Se der o erro "package ‘OGarraDocker’ is in use and will not be installed"
detach("package:OGarraDocker", unload = TRUE)
# instalação para testes
withr::with_libpaths(new = .libPaths()[1], install.packages('./source/OGarraDocker_0.1.0.tar.gz', type='source', repos = NULL))
library("opencpu")
ocpu_start_app("OGarraDocker")
#!/usr/bin/Rscript
# ESTE SCRIPT DEVE SER EXECUTADO SOMENTE NA MÁQUINA DE TESTES. NÃO EXECUTAR NO HOST!
# A CADA EXECUÇÃO ALTERAR OS PATHS DE ACORDO COM A NECESSIDADE
# COMO DEFAULT, O PACOTE BuscaNFe É UTILIZADO
# pacote necessários
packages = c("devtools", "rstudioapi", "withr")
# verificar se estão instalados ou não
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
# local de trabalho
# setwd("/home/gtsaito/Desktop/Gui/Oficinas1/OGarraDocker")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
# documenta
devtools::document(pkg = './OGarraDocker')
# build
devtools::build(pkg = './OGarraDocker', path = './source/')
# Se der o erro "package ‘OGarraDocker’ is in use and will not be installed"
detach("package:OGarraDocker", unload = TRUE)
# instalação para testes
withr::with_libpaths(new = .libPaths()[1], install.packages('./source/OGarraDocker_0.1.0.tar.gz', type='source', repos = NULL))
library("opencpu")
ocpu_start_app("OGarraDocker)
ocpu_start_server()
#!/usr/bin/Rscript
# ESTE SCRIPT DEVE SER EXECUTADO SOMENTE NA MÁQUINA DE TESTES. NÃO EXECUTAR NO HOST!
# A CADA EXECUÇÃO ALTERAR OS PATHS DE ACORDO COM A NECESSIDADE
# COMO DEFAULT, O PACOTE BuscaNFe É UTILIZADO
# pacote necessários
packages = c("devtools", "rstudioapi", "withr")
# verificar se estão instalados ou não
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
# local de trabalho
# setwd("/home/gtsaito/Desktop/Gui/Oficinas1/OGarraDocker")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
# documenta
devtools::document(pkg = './OGarraDocker')
# build
devtools::build(pkg = './OGarraDocker', path = './source/')
# Se der o erro "package ‘OGarraDocker’ is in use and will not be installed"
detach("package:OGarraDocker", unload = TRUE)
# instalação para testes
withr::with_libpaths(new = .libPaths()[1], install.packages('./source/OGarraDocker_0.1.0.tar.gz', type='source', repos = NULL))
ocpu_start_app("OGarraDocker)
library("opencpu")
ocpu_start_server()
#!/usr/bin/Rscript
# ESTE SCRIPT DEVE SER EXECUTADO SOMENTE NA MÁQUINA DE TESTES. NÃO EXECUTAR NO HOST!
# A CADA EXECUÇÃO ALTERAR OS PATHS DE ACORDO COM A NECESSIDADE
# COMO DEFAULT, O PACOTE BuscaNFe É UTILIZADO
# pacote necessários
packages = c("devtools", "rstudioapi", "withr")
# verificar se estão instalados ou não
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
# local de trabalho
# setwd("/home/gtsaito/Desktop/Gui/Oficinas1/OGarraDocker")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
# documenta
devtools::document(pkg = './OGarraDocker')
# build
devtools::build(pkg = './OGarraDocker', path = './source/')
# Se der o erro "package ‘OGarraDocker’ is in use and will not be installed"
detach("package:OGarraDocker", unload = TRUE)
# instalação para testes
withr::with_libpaths(new = .libPaths()[1], install.packages('./source/OGarraDocker_0.1.0.tar.gz', type='source', repos = NULL))
library("opencpu")
ocpu_start_server()
??as.json
help(as.json)
install.packages(jsonlite)
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
#!/usr/bin/Rscript
# ESTE SCRIPT DEVE SER EXECUTADO SOMENTE NA MÁQUINA DE TESTES. NÃO EXECUTAR NO HOST!
# A CADA EXECUÇÃO ALTERAR OS PATHS DE ACORDO COM A NECESSIDADE
# COMO DEFAULT, O PACOTE BuscaNFe É UTILIZADO
# pacote necessários
packages = c("devtools", "rstudioapi", "withr")
# verificar se estão instalados ou não
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
# local de trabalho
# setwd("/home/gtsaito/Desktop/Gui/Oficinas1/OGarraDocker")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
# documenta
devtools::document(pkg = './OGarraDocker')
# build
devtools::build(pkg = './OGarraDocker', path = './source/')
# Se der o erro "package ‘OGarraDocker’ is in use and will not be installed"
detach("package:OGarraDocker", unload = TRUE)
# instalação para testes
withr::with_libpaths(new = .libPaths()[1], install.packages('./source/OGarraDocker_0.1.0.tar.gz', type='source', repos = NULL))
library("opencpu")
ocpu_start_server()
#!/usr/bin/Rscript
# ESTE SCRIPT DEVE SER EXECUTADO SOMENTE NA MÁQUINA DE TESTES. NÃO EXECUTAR NO HOST!
# A CADA EXECUÇÃO ALTERAR OS PATHS DE ACORDO COM A NECESSIDADE
# COMO DEFAULT, O PACOTE BuscaNFe É UTILIZADO
# pacote necessários
packages = c("devtools", "rstudioapi", "withr")
# verificar se estão instalados ou não
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
# local de trabalho
# setwd("/home/gtsaito/Desktop/Gui/Oficinas1/OGarraDocker")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
# documenta
devtools::document(pkg = './OGarraDocker')
# build
devtools::build(pkg = './OGarraDocker', path = './source/')
# Se der o erro "package ‘OGarraDocker’ is in use and will not be installed"
detach("package:OGarraDocker", unload = TRUE)
# instalação para testes
withr::with_libpaths(new = .libPaths()[1], install.packages('./source/OGarraDocker_0.1.0.tar.gz', type='source', repos = NULL))
library("opencpu")
ocpu_start_server()
#!/usr/bin/Rscript
# ESTE SCRIPT DEVE SER EXECUTADO SOMENTE NA MÁQUINA DE TESTES. NÃO EXECUTAR NO HOST!
# A CADA EXECUÇÃO ALTERAR OS PATHS DE ACORDO COM A NECESSIDADE
# COMO DEFAULT, O PACOTE BuscaNFe É UTILIZADO
# pacote necessários
packages = c("devtools", "rstudioapi", "withr")
# verificar se estão instalados ou não
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
# local de trabalho
# setwd("/home/gtsaito/Desktop/Gui/Oficinas1/OGarraDocker")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
# documenta
devtools::document(pkg = './OGarraDocker')
# build
devtools::build(pkg = './OGarraDocker', path = './source/')
# Se der o erro "package ‘OGarraDocker’ is in use and will not be installed"
detach("package:OGarraDocker", unload = TRUE)
# instalação para testes
withr::with_libpaths(new = .libPaths()[1], install.packages('./source/OGarraDocker_0.1.0.tar.gz', type='source', repos = NULL))
library("opencpu")
ocpu_start_server()
#!/usr/bin/Rscript
# ESTE SCRIPT DEVE SER EXECUTADO SOMENTE NA MÁQUINA DE TESTES. NÃO EXECUTAR NO HOST!
# A CADA EXECUÇÃO ALTERAR OS PATHS DE ACORDO COM A NECESSIDADE
# COMO DEFAULT, O PACOTE BuscaNFe É UTILIZADO
# pacote necessários
packages = c("devtools", "rstudioapi", "withr")
# verificar se estão instalados ou não
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
# local de trabalho
# setwd("/home/gtsaito/Desktop/Gui/Oficinas1/OGarraDocker")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
# documenta
devtools::document(pkg = './OGarraDocker')
# build
devtools::build(pkg = './OGarraDocker', path = './source/')
# Se der o erro "package ‘OGarraDocker’ is in use and will not be installed"
detach("package:OGarraDocker", unload = TRUE)
# instalação para testes
withr::with_libpaths(new = .libPaths()[1], install.packages('./source/OGarraDocker_0.1.0.tar.gz', type='source', repos = NULL))
library("opencpu")
ocpu_start_server()
#!/usr/bin/Rscript
# ESTE SCRIPT DEVE SER EXECUTADO SOMENTE NA MÁQUINA DE TESTES. NÃO EXECUTAR NO HOST!
# A CADA EXECUÇÃO ALTERAR OS PATHS DE ACORDO COM A NECESSIDADE
# COMO DEFAULT, O PACOTE BuscaNFe É UTILIZADO
# pacote necessários
packages = c("devtools", "rstudioapi", "withr")
# verificar se estão instalados ou não
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
# local de trabalho
# setwd("/home/gtsaito/Desktop/Gui/Oficinas1/OGarraDocker")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
# documenta
devtools::document(pkg = './OGarraDocker')
# build
devtools::build(pkg = './OGarraDocker', path = './source/')
# Se der o erro "package ‘OGarraDocker’ is in use and will not be installed"
detach("package:OGarraDocker", unload = TRUE)
# instalação para testes
withr::with_libpaths(new = .libPaths()[1], install.packages('./source/OGarraDocker_0.1.0.tar.gz', type='source', repos = NULL))
library("opencpu")
ocpu_start_server()
#!/usr/bin/Rscript
# ESTE SCRIPT DEVE SER EXECUTADO SOMENTE NA MÁQUINA DE TESTES. NÃO EXECUTAR NO HOST!
# A CADA EXECUÇÃO ALTERAR OS PATHS DE ACORDO COM A NECESSIDADE
# COMO DEFAULT, O PACOTE BuscaNFe É UTILIZADO
# pacote necessários
packages = c("devtools", "rstudioapi", "withr")
# verificar se estão instalados ou não
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
# local de trabalho
# setwd("/home/gtsaito/Desktop/Gui/Oficinas1/OGarraDocker")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
# documenta
devtools::document(pkg = './OGarraDocker')
# build
devtools::build(pkg = './OGarraDocker', path = './source/')
# Se der o erro "package ‘OGarraDocker’ is in use and will not be installed"
detach("package:OGarraDocker", unload = TRUE)
# instalação para testes
withr::with_libpaths(new = .libPaths()[1], install.packages('./source/OGarraDocker_0.1.0.tar.gz', type='source', repos = NULL))
print(OGarraDocker::RemoveSQLiteDataTable(id = 2))
print(OGarraDocker::RemoveSQLiteDataTable(idToRemove = 2))
#'
#' @return Retorna verdadeiro caso foi possível a remoção na tabela ou false, caso o contrário
#'
#' @details
#' * 1. Para obter informações a respeito do código R desta função, acessar ...
#'
#' @examples
#' RemoveSQLiteDataTable(idToRemove = 1)
#'
#' @export
RemoveSQLiteDataTable <- function(dataTableName = "OGarraDockerDB", idToRemove) {
# Setando o diretorio para conseguir utilizar o que eu preciso
setwd("C:\\Users\\guilh\\Desktop\\aulasUTFPR\\2022_2\\Oficina1\\OGarraDocker\\OGarraDocker/database")
if (!DBI::dbCanConnect(RSQLite::SQLite(), dbname = dataTableName)) {
return(0)
}
# Faz a conxao com a base de dados
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = dataTableName)
queryToRetrieve <- paste0("SELECT id FROM ", dataTableName, "WHERE id = ", idToRemove)
dataRetrieved <- DBI::dbGetQuery(con, queryToRetrieve)
# Prepara a query para ser executada
query <- paste0("DELETE FROM ", dataTableName, " WHERE id = ", idToRemove)
# Escreve na tabela que fez a conexao
DBI::dbSendQuery(conn = con, statement = query)
return(dataRetrieved)
}
print(RemoveSQLiteDataTable(idToRemove = 2))
library("opencpu")
ocpu_start_server()
#'
#' @return Retorna verdadeiro caso foi possível a remoção na tabela ou false, caso o contrário
#'
#' @details
#' * 1. Para obter informações a respeito do código R desta função, acessar ...
#'
#' @examples
#' RemoveSQLiteDataTable(idToRemove = 1)
#'
#' @export
RemoveSQLiteDataTable <- function(dataTableName = "OGarraDockerDB", idToRemove) {
# Setando o diretorio para conseguir utilizar o que eu preciso
setwd("C:\\Users\\guilh\\Desktop\\aulasUTFPR\\2022_2\\Oficina1\\OGarraDocker\\OGarraDocker/database")
if (!DBI::dbCanConnect(RSQLite::SQLite(), dbname = dataTableName)) {
return(0)
}
# Faz a conxao com a base de dados
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = dataTableName)
queryToRetrieve <- paste0("SELECT id FROM ", dataTableName, " WHERE id = ", idToRemove)
dataRetrieved <- DBI::dbGetQuery(con, queryToRetrieve)
# Prepara a query para ser executada
query <- paste0("DELETE FROM ", dataTableName, " WHERE id = ", idToRemove)
# Escreve na tabela que fez a conexao
DBI::dbSendQuery(conn = con, statement = query)
return(dataRetrieved)
}
print(RemoveSQLiteDataTable(idToRemove = 2))
#!/usr/bin/Rscript
# ESTE SCRIPT DEVE SER EXECUTADO SOMENTE NA MÁQUINA DE TESTES. NÃO EXECUTAR NO HOST!
# A CADA EXECUÇÃO ALTERAR OS PATHS DE ACORDO COM A NECESSIDADE
# COMO DEFAULT, O PACOTE BuscaNFe É UTILIZADO
# pacote necessários
packages = c("devtools", "rstudioapi", "withr")
# verificar se estão instalados ou não
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
# local de trabalho
# setwd("/home/gtsaito/Desktop/Gui/Oficinas1/OGarraDocker")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
# documenta
devtools::document(pkg = './OGarraDocker')
# build
devtools::build(pkg = './OGarraDocker', path = './source/')
# Se der o erro "package ‘OGarraDocker’ is in use and will not be installed"
detach("package:OGarraDocker", unload = TRUE)
# instalação para testes
withr::with_libpaths(new = .libPaths()[1], install.packages('./source/OGarraDocker_0.1.0.tar.gz', type='source', repos = NULL))
library("opencpu")
ocpu_start_server()
#!/usr/bin/Rscript
# ESTE SCRIPT DEVE SER EXECUTADO SOMENTE NA MÁQUINA DE TESTES. NÃO EXECUTAR NO HOST!
# A CADA EXECUÇÃO ALTERAR OS PATHS DE ACORDO COM A NECESSIDADE
# COMO DEFAULT, O PACOTE BuscaNFe É UTILIZADO
# pacote necessários
packages = c("devtools", "rstudioapi", "withr")
# verificar se estão instalados ou não
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
# local de trabalho
# setwd("/home/gtsaito/Desktop/Gui/Oficinas1/OGarraDocker")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
# documenta
devtools::document(pkg = './OGarraDocker')
# build
devtools::build(pkg = './OGarraDocker', path = './source/')
# Se der o erro "package ‘OGarraDocker’ is in use and will not be installed"
detach("package:OGarraDocker", unload = TRUE)
# instalação para testes
withr::with_libpaths(new = .libPaths()[1], install.packages('./source/OGarraDocker_0.1.0.tar.gz', type='source', repos = NULL))
